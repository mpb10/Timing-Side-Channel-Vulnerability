<#
.SYNOPSIS 
	These are three PowerShell scripts that demonstrate, in a very basic manner, what timing side-channel vulnerabilities are.
	
.DESCRIPTION 
	This script is vulnerable to timing side-channel attacks because the script exits the while-loop used in the hash comparison as soon as it realizes they do not match. An attacker can pay attention to how long it took the script to compare the hashes in order to tell how close their hash is to the actual one.
	
.PARAMETER Hash1 
	A 32 character string that is meant to represent an MD5 hash.
.PARAMETER Hash2 
	A 32 character string that is meant to represent an MD5 hash.
	
.EXAMPLE 
	.\VulnerableScript.ps1 5f4dcc3b5aa765d61d8327deb882cf99 5f4dcc3b5aa763dfj63575d83eb2c3go
	Compares two hashes that do not match. Exits the while-loop and returns the answer as soon as the script realizes that the hashes do not match.
.EXAMPLE 
	.\VulnerableScript.ps1 5f4dcc3b5aa765d61d8327deb882cf99 5f4dcc3b5aa765d61d8327deb882cf99
	Compares two matching hashes.

.NOTES 
	Author: mpb10
	Updated: April 25th, 2018
	Version: 1.0.0
.LINK 
	https://github.com/mpb10/Timing-Side-Channel-Vulnerability
#>

# Example hash of the word 'password': 5f4dcc3b5aa765d61d8327deb882cf99

Param(
	[Parameter(Position = 0,Mandatory = $True)]
	[ValidateLength(32,32)]
	[String]$Hash1,
	[Parameter(Position = 1,Mandatory = $True)]
	[ValidateLength(32,32)]
	[String]$Hash2
)

Write-Host "Comparing hashes:`n    $Hash1`n    $Hash2"

# Flag variable used to determine if the hashes match or not.
$MatchStatus = $True

$i = 0

$TimeToCompare = Measure-Command {
	While ($i -lt 32) {
		Write-Verbose "Testing position: $i"
		
		If ($Hash1.Chars($i) -clike $Hash2.Chars($i)) {
			$i++
			Start-Sleep -Milliseconds 500
		}
		Else {
			$MatchStatus = $False
			Break
		}
	}
	
	If ($MatchStatus -eq $True) {
		Write-Host "`nHashes match.`n" -ForegroundColor "Green"
	}
	Else {
		Write-Host "`nHashes do not match.`n" -ForegroundColor "Red"
	}
}

Write-Host "Finished. Time: $TimeToCompare" -ForegroundColor "Yellow"

